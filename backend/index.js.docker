import express from "express";
import bcrypt from "bcryptjs";
import connectDB from "./config/database.js";
import adminRoute from "./routes/adminRoutes.js";
import customerRoute from "./routes/customerRoutes.js";
import packageRoute from "./routes/packageRoutes.js";
import reviewRoute from "./routes/reviewRoutes.js";
import bookingRoute from "./routes/bookingRoute.js";
import guideRoute from "./routes/guideRoutes.js";
import agencyRoutes from "./routes/agencyRoutes.js";
import wishlistRoutes from "./routes/wishlistRoutes.js";
import wishlistGuideRoutes from "./routes/wishlistGuideRoutes.js";
import guideRequestRoutes from "./routes/guideRequestRoutes.js";
import { customers } from "./models/customerModel.js";
import { Agency } from "./models/agencyModel.js";
import { Guide } from "./models/guideModel.js";
import cors from "cors";
import multer from "multer";
import path from "path";
import jwt from "jsonwebtoken";
import searchRoutes from "./routes/searchRoutes.js";
import requests from './routes/requestRoutes.js'
import cacheRoutes from './routes/cacheRoutes.js';
import nodemailer from "nodemailer";
import ErrorHandler from "./ErrorHandler.js";
import swaggerDocs from './swaggerSetup.js';

// Connect to MongoDB
connectDB();

const app = express();
app.use(express.json());
app.use(
  cors({
    origin: process.env.NODE_ENV === 'production' 
      ? "https://echovoyages.com" 
      : "http://localhost:5173",
  })
);

app.get("/", (req, res) => {
  res.send("EchoVoyages API is running");
});

app.use("/admin", adminRoute);
app.use("/customers", customerRoute);
app.use("/packages", packageRoute);
app.use("/reviews", reviewRoute);
app.use("/bookings", bookingRoute);
app.use("/guides", guideRoute);
app.use("/agency", agencyRoutes);
app.use("/wishlist", wishlistRoutes);
app.use("/search", searchRoutes);
app.use("/wishlistGuides", wishlistGuideRoutes);
app.use('/requests',requests);
app.use('/guide-requests', guideRequestRoutes);
app.use('/cache', cacheRoutes);
app.use("/public", express.static("public"));
app.use(ErrorHandler);

const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, path.join("public", "uploads"));
  },
  filename: function (req, file, cb) {
    cb(null, Date.now() + "-" + file.originalname);
  },
});
const upload = multer({ storage: storage });

function verifyToken(req, res, next) {
  const token = req.headers["authorization"];

  if (!token) res.status(401).json({ message: "Token Not Found" });

  try {
    const data = jwt.verify(token, process.env.JWT_SECRET || "Voyage_secret");
    req.id = data.id;
    next();
  } catch (error) {
    return res.status(401).json({ message: "Invalid Token" });
  }
}

const port = process.env.PORT || 5000;
app.listen(port, () => {
  console.log(`Server running on port ${port}`);

  // Initialize Swagger
  swaggerDocs(app);
});
